// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String?
  portfolios Portfolio[]
  sharedAccess SharedPortfolioAccess[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Portfolio {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  name      String
  lots      Lot[]
  cash      Float    @default(0)
  visibility PortfolioVisibility @default(PRIVATE)
  sharedAccess SharedPortfolioAccess[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PortfolioVisibility {
  PRIVATE
  PUBLIC
  SMART_SHARED
}

model Lot {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId String
  ticker      String
  quantity    Float
  pricePaid   Float
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SharedPortfolioAccess {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId String
  token       String   @unique
  expiresAt   DateTime?
  revoked     Boolean  @default(false)
  viewers     TokenAccessLog[]
  createdBy   User?    @relation(fields: [createdById], references: [id])
  createdById String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TokenAccessLog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  sharedAccess SharedPortfolioAccess @relation(fields: [sharedAccessId], references: [id])
  sharedAccessId String
  viewerId    String?
  viewerType  ViewerType @default(ANONYMOUS)
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
}

enum ViewerType {
  ANONYMOUS
  AUTHENTICATED
}
